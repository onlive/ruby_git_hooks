#!/usr/bin/env ruby

# Copy files from ~/.git_hooks into .git/hooks in the current repo.

# This script is run by Git, and can wind up running in system Ruby,
# so it should be as 1.8-compatible and low on dependencies as
# possible.  I will be so, so happy when Ruby 1.8 is effectively
# dead.

# Note that we copy files that aren't names of hooks on purpose.
# It's totally kosher to have required or symlinked Ruby scripts
# and other stuff in the ~/.git_hooks dir.  It's also totally
# kosher to use RubyGitHooks support for git clone with hooks
# even if you don't use RGH for anything else.

# When the system we are running on doesn't support symlinks,
# we turn the symlinks into wrapper scripts (for Windows, etc)

# As a support for the user's specific installation (a kind of
# install hooks hook) the file "install_hook" will be run, if present

require "fileutils"
INSTALL_HOOK_SCRIPT = "install-hook"
 
def system_supports_symlinks
  # if we're on windows we won't recognize symlinks
  # TO DO: we shouldn't test until we encounter one, but only test once)
  begin
    File.readlink("any file") 
  rescue NotImplementedError
     puts "Your system does not support symbolic links."
     return false
  rescue
    # just ignore any other errors
  end
  return true
end

def is_symlink(file)
  # is this file supposed to be a symbolic link?
  # if so it will contain just the name of the file it should be linked to.
  # We could just read in part of the file if it's a longer file.
  # Is it safe to just read the first line and check that?
  contents = File.read(file) rescue nil
  m = contents && contents.match(/\A\s*(\w*[\.]?\w*)\s*\z/)
  return m && m[1]
end

until File.exist?(".git/hooks") || Dir.getwd =~ /\/$/
  Dir.chdir ".."
end

raise "You're not in a git directory!" unless File.exist?(".git/hooks")

has_sym = system_supports_symlinks

Dir["#{ENV['HOME']}/.git_hooks/*"].each do |file|  
  system "chmod +x \"#{file}\""  
  hook_name = file.split("/")[-1] #e.g. pre-commit
  dest = ".git/hooks/" + hook_name 
  if hook_name == INSTALL_HOOK_SCRIPT
    puts "Running install-hook script."
    system(file)  # don't copy the script, just run it.
  elsif !has_sym && (link_file = is_symlink(file))
    puts "Installing shell wrapper for: #{file}"
    File.open(dest, "w") do |f|
      f.write("#!/bin/bash\n")
      f.write("#{Dir.getwd}/.git/hooks/#{link_file} --hook #{hook_name} \"$@\"\n")
    end
    system "chmod +x \"#{dest}\""
  else
    # otherwise just copy the file.
    puts "Installing hook file: #{file}"
    FileUtils.copy_entry(file, dest, false, false, true)
  end
end

puts "Copied hooks into #{Dir.getwd}/.git/hooks."
