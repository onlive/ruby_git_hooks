#!/usr/bin/env ruby

# If you're not at OnLive, consider this a sample setup script.
# If you *are* at OnLive, this is what we use as of April 2013.

begin
  require "ruby_git_hooks"
rescue LoadError
  STDERR.puts "Can't find ruby_git_hooks gem. " +
    "Are you sure it's installed in this gemset? "
  exit 1
end

hook_contents = RubyGitHooks.shebang + DATA.read

# Change into git top-level dir
until File.exist? ".git"
  if Dir.getwd == "/"
    STDERR.puts "No .git directory found!  Exiting!"
    exit 2
  end
  Dir.chdir ".."
end

# Then cd into hooks dir
Dir.chdir ".git/hooks"

# Create single Ruby Git Hook file
# Note: this will overwrite any previous contents.
File.open "ruby_git_hook.rb", "w" do |f|
  f.write hook_contents
end

FileUtils.chmod "u=wrx,go=rx", "ruby_git_hook.rb"

# Symlink that file to all supported hook types
RubyGitHooks::HOOK_NAMES.each do |hook_name|
  # Note: no force.  If something is already set up,
  # don't overwrite it.
  FileUtils.ln_s "ruby_git_hook.rb", hook_name
end

puts "Done!"

__END__
# No shebang in onlive_hook_setup, will be added.
begin
  require "ruby_git_hooks"
rescue LoadError
  STDERR.puts <<ERR_MSG
==============================================================
Can't require ruby_git_hooks with Ruby version #{RUBY_VERSION}!
==============================================================
You were running #{__FILE__}.

Here are a few things that may help you to diagnose the problem:

Ruby installed in #{RbConfig::CONFIG["bindir"] rescue "(unknown)"}
Ruby Patchlevel: #{RbConfig::CONFIG["PATCHLEVEL"] rescue "(unknown)"}

Path: #{ENV['PATH'] || "None -- uh oh."}

Bundler Gemfile: #{ENV['BUNDLE_GEMFILE'] || "None/Unknown"}
RubyGems version: #{`gem --version`}
Gem env output:
#{`gem env`}
==============================================================
ERR_MSG
end

require "ruby_git_hooks/case_clash"
require "ruby_git_hooks/copyright_check"

run_as = RubyGitHooks.run_as_hook

if ["pre-commit", "pre-receive"].include?(run_as)
  RubyGitHooks.register CaseClashHook.new
elsif ["post-commit", "post-receive"].include?(run_as)
  RubyGitHooks.register CopyrightCheckHook.new \
         "domain" => "onlive.com",
         "company_check" => /OL2,?\s+inc/i,
         "from" => "OnLive Copyright Cop <noreply@onlive.com>",
         "via" => {
                    :address => "exchange01.pao529.onlive.com",
                    :domain => "onlive.com"
                  },
         "intro" => <<INTRO
  What's this email?  Please see:
  https://wiki.onlive.com/display/DOCS/Copyright+Notices+in+Source+Files
  INTRO
end

