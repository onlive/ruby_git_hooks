* Debug various cases for first commit in new repo.

* Grit

* "Illegal content" hook -- for catching incomplete merges (">>>>>>"), etc.

* "Bundle install on pull" hook

* Wire up pre-rebase hooks to allow validations for multi-file
  criteria.  Then you can't rebase in a new file if it would violate
  the CaseClashHook, say.

* Document built-in hooks like CopyrightCheck

* Document, document, document

* A hook should have default hook types and file extensions and
  git-hook names, and should only run if those match -- or if
  registered with an overrriding git-hook name or file type.

* Add option registration to Hook parent class and do appropriate
  string/symbol checking there.

* Print message if a hook is registered but run is never called.

* Have a simple way to "forward" to another file.  That is, save the
  arguments and STDIN and call another file with the same arguments
  and same STDIN.  That would make it easy to have a "pre-commit.d"
  directory and automatically call to every executable in that
  directory matching "pre-commit" in the filename.  Then you could
  easily combine multiple hooks -- for instance, the cloner's personal
  hooks, the workplace's at-work hooks and the project's supplied
  hooks.  Wouldn't always be a good idea, of course.
